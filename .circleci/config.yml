# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

references:
  workspace_root: &workspace_root
    ~/repo

  container_config: &container_config
    working_directory: *workspace_root
    docker:
      - image: circleci/node:6.11

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  build_and_test:
    <<: *container_config

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - yarn-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - yarn-dependencies-

      - run: yarn install --ignore-engines
      - run: yarn test --ignore-engines
      - run: yarn build --ignore-engines
  
      - store_artifacts:
          path: ./dist

      - save_cache:
          name: Save yarn packages to cache
          key: yarn-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - dist/*

  deploy:
    docker:
      - image: cibuilds/github:0.12

    steps:
      - *attach_workspace

      - run:
          name: Simulate Deploy
          command: ls
      
      # Get version from package.json using jq (comes with cibuilds/base)
      # Create a github release with that version
      - run:
          name: Publish Release on GitHub
          command: |
            VERSION=$(cat package.json | jq .version)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./dist/

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore: master

  build_test_and_deploy:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
            - build_and_test
      - deploy:
          requires:
            - hold

